name: Using Reusable Website Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules # we cache all the dependencies
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache is hit
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules # we cache all the dependencies
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache is hit
        run: npm ci
      - name: Test code
        id: run-tests  # need the id to evaluate below
        run: npm run test
      - name: Upload test report
        if: failure() &&  steps.run-tests.outcome == 'failure'   # we can also use expression like : $ {{  }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules # we cache all the dependencies
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # check if cache is hit
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses:  ./.github/workflows/reusable.yml  # provide path to the reusable wf relative to the root 
  report:
    needs: [lint, deploy] # need to be dependend on the failing jobs, otherwise run in parallel.
    if: failure()  # we'll run on any failure
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong."
          echo "${{ toJSON(github) }}"

